{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from \"./CountChange\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: [_jsx(Button, {\n      title: \"Go to Tim's profile\",\n      onPress: function onPress() {\n        return navigation.navigate('Profile', {\n          name: 'Tim'\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Count Change\",\n      onPress: function onPress() {\n        return navigation.navigate('CountChange');\n      }\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.name, \"'s profile\"]\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Welcome'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: \"CountChange\",\n        component: CountChange\n      })]\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","CountChange","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","style","flexDirection","children","title","onPress","navigate","name","ProfileScreen","_ref2","route","params","MyStack","Navigator","Screen","component","options"],"sources":["/Users/tim/Desktop/reactnative-main/code/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\nimport {Button,Text,View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport CountChange from './CountChange';\n\nconst Stack = createNativeStackNavigator();\n\nconst HomeScreen = ({navigation}) => {\n    return (\n     <View style={{ flexDirection:'row'}}>\n            <Button\n                title=\"Go to Tim's profile\"\n                onPress={() =>\n                navigation.navigate('Profile', {name: 'Tim'})\n                }\n            />\n            <Button\n                title=\"Count Change\"\n                onPress={() =>\n                navigation.navigate('CountChange') \n                }\n            />\n      </View>\n    );\n  };\n\n  const ProfileScreen = ({navigation, route}) => {\n    return <Text>This is {route.params.name}'s profile</Text>;\n  };\n\nconst MyStack = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen}\n          options={{title: 'Welcome'}}\n        />\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n        <Stack.Screen name=\"CountChange\" component={CountChange} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default MyStack;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,WAAW;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,KAAK,GAAGN,0BAA0B,CAAC,CAAC;AAE1C,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3B,OACCJ,KAAA,CAACP,IAAI;IAACY,KAAK,EAAE;MAAEC,aAAa,EAAC;IAAK,CAAE;IAAAC,QAAA,GAC7BT,IAAA,CAACP,MAAM;MACHiB,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACTL,UAAU,CAACM,QAAQ,CAAC,SAAS,EAAE;UAACC,IAAI,EAAE;QAAK,CAAC,CAAC;MAAA;IAC5C,CACJ,CAAC,EACFb,IAAA,CAACP,MAAM;MACHiB,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACTL,UAAU,CAACM,QAAQ,CAAC,aAAa,CAAC;MAAA;IACjC,CACJ,CAAC;EAAA,CACF,CAAC;AAEX,CAAC;AAED,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAA4B;EAAA,IAAvBT,UAAU,GAAAS,KAAA,CAAVT,UAAU;IAAEU,KAAK,GAAAD,KAAA,CAALC,KAAK;EACvC,OAAOd,KAAA,CAACR,IAAI;IAAAe,QAAA,GAAC,UAAQ,EAACO,KAAK,CAACC,MAAM,CAACJ,IAAI,EAAC,YAAU;EAAA,CAAM,CAAC;AAC3D,CAAC;AAEH,IAAMK,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,OACElB,IAAA,CAACJ,mBAAmB;IAAAa,QAAA,EAClBP,KAAA,CAACC,KAAK,CAACgB,SAAS;MAAAV,QAAA,GACdT,IAAA,CAACG,KAAK,CAACiB,MAAM;QAACP,IAAI,EAAC,MAAM;QAACQ,SAAS,EAAEjB,UAAW;QAC9CkB,OAAO,EAAE;UAACZ,KAAK,EAAE;QAAS;MAAE,CAC7B,CAAC,EACFV,IAAA,CAACG,KAAK,CAACiB,MAAM;QAACP,IAAI,EAAC,SAAS;QAACQ,SAAS,EAAEP;MAAc,CAAE,CAAC,EACzDd,IAAA,CAACG,KAAK,CAACiB,MAAM;QAACP,IAAI,EAAC,aAAa;QAACQ,SAAS,EAAEvB;MAAY,CAAE,CAAC;IAAA,CAC5C;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}